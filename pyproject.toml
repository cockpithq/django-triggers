[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "dj-triggers"
version = "1.0.1"
description = """
A Triggers system for Django made for implementing event-based \
business logic configurable through the Django admin site."""
license = "BSD-3-Clause"
authors = [
    "Dmitry Kolyagin <dmitry.kolyagin@gmail.com>"
]
readme = "README.md"
packages = [{include = "triggers"}]
repository = "https://github.com/cockpithq/django-triggers"
keywords = ["django", "triggers"]
classifiers = [
    "Framework :: Django :: 3",
    "Framework :: Django :: 4"
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
Django = ">=3"
django-polymorphic = "^3"
celery = ">=4.4"

[tool.poetry.group.dev.dependencies]
flake8 = "^5.0.4"
Flake8-pyproject = "^1.1.0.post0"
mypy = "^0.971"
django-stubs = "^1.12.0"
flake8-django = "^1.1.5"
pytest = "^7.1.3"
model-bakery = "^1.7.0"
pytest-django = "^4.5.2"
isort = "^5.10.1"
pytest-cov = "^4.0.0"
celery-types = "^0.14.0"

[tool.flake8]
max-line-length = 120
exclude = [
    "*/migrations/*.py"
]

[tool.coverage.report]
exclude_lines = [
  "raise NotImplementedError"
]

[tool.django-stubs]
django_settings_module = "tests.app.settings"

[tool.mypy]
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = [
    "polymorphic.admin",
    "polymorphic.models"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
    "--ds=tests.app.settings",
    "--cov=triggers",
    "--cov-report=term-missing:skip-covered"
]

[tool.isort]
force_sort_within_sections = true
include_trailing_comma = true
line_length = 120
multi_line_output = 3
use_parentheses = true
